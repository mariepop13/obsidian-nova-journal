name: Auto PR title/body
on:
  pull_request:
    types: [opened, edited, synchronize]
permissions:
  contents: read
  pull-requests: write

jobs:
  set-title-body:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo, number} = context.issue;
            const pr = await github.rest.pulls.get({ owner, repo, pull_number: number });

            let title = (pr.data.title || '').trim();
            if (!title) {
              const ref = pr.data.head.ref || '';
              const [prefix, ...rest] = ref.split('/');
              const map = { feature: 'feat', fix: 'fix', hotfix: 'fix', refactor: 'refactor', chore: 'chore' };
              if (map[prefix] && rest.length) {
                const subject = rest.join('/').replace(/[-_]/g, ' ');
                title = `${map[prefix]}: ${subject}`;
              } else {
                const commits = await github.paginate(github.rest.pulls.listCommits, { owner, repo, pull_number: number });
                const first = commits.find(c => !c.commit.message.startsWith('Merge'));
                title = first ? first.commit.message.split('\n')[0] : 'chore: update';
              }
              await github.rest.pulls.update({ owner, repo, pull_number: number, title });
            }

            if (!pr.data.body || pr.data.body.trim() === '') {
              const body = `## Summary\nShort summary of the change.\n\n## Changes\n- …\n\n## Testing\n- …\n\n## Notes\n- …\n\n## Checklist\n- [ ] Build passes\n- [ ] Scope is small and focused\n`;
              await github.rest.pulls.update({ owner, repo, pull_number: number, body });
            }

